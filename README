How to run the shell

Type command 'make'
Type ./Shell to run the new shell.

-------------------------------------------------------------------------------------------------------------------------------

main.c is the main file of the shell.
It prints the hostname and system name and calls appropriate functions after input is taken.

-------------------------------------------------------------------------------------------------------------------------------

ls.c file executes the ls command.

-------------------------------------------------------------------------------------------------------------------------------

cd.c file executes cd commands.


Which command does cd support:-
cd 
cd .
cd ~
cd directory_name

-------------------------------------------------------------------------------------------------------------------------------

hist.c prints the history

It can be in any one of the form given below:-

history
history <num>

-------------------------------------------------------------------------------------------------------------------------------

nightswatch.c takes care of nightswatch command.

It can be in any one of the form given below:-

nightswatch -n time interrupt
nightswatch -n time dirty

-------------------------------------------------------------------------------------------------------------------------------

check.c finds out which command is given and calls the appropriate function

-------------------------------------------------------------------------------------------------------------------------------

pwdo.c takes care of the pwd command.
It always prints absolute path.

-------------------------------------------------------------------------------------------------------------------------------

add_hist.c always adds the current input to a file which can atmost store 20 commands.

-------------------------------------------------------------------------------------------------------------------------------

takeinput.c takes the command from the user.

-------------------------------------------------------------------------------------------------------------------------------

pinfo.c takes care of the pinfo command.

It can be in any one of the form given below:-

pinfo
pinfo <num>

-------------------------------------------------------------------------------------------------------------------------------

exec.c takes care of other system commands.

-------------------------------------------------------------------------------------------------------------------------------

print_dir.c prints the current directory you are in.
The directory where the shell is, is treated as home directory.

-------------------------------------------------------------------------------------------------------------------------------

sep_space.c takes care of the multiple spaces.

-------------------------------------------------------------------------------------------------------------------------------

echo.c takes care of the echo command.

-------------------------------------------------------------------------------------------------------------------------------

bg.c makes any stopped process to run in background.

-------------------------------------------------------------------------------------------------------------------------------

fg.c brings any process in foreground.

-------------------------------------------------------------------------------------------------------------------------------

jobs.c prints all the jobs which are running in background or are stopped currently.

-------------------------------------------------------------------------------------------------------------------------------

overkill.c kills all the jobs which are either currently running in background or are stopped.

-------------------------------------------------------------------------------------------------------------------------------

kjob.c sends signal to a specific job after taking the job id and signal to be given to that job.

-------------------------------------------------------------------------------------------------------------------------------

setenv.c sets any variable with a given value if the value is given or else it just intializes the variable to empty.

-------------------------------------------------------------------------------------------------------------------------------

unsetenv.c removes the value of the given variable and removes it from the env list.

-------------------------------------------------------------------------------------------------------------------------------

redirect.c handles all the commands involving redirection.

-------------------------------------------------------------------------------------------------------------------------------

cronjob.c executes any particluar command every t seconds until p seconds are over.

-------------------------------------------------------------------------------------------------------------------------------

Enter quit to exit the shell.
